<Window x:Class="Nihon.ContentView.UserInterface"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Nihon.ContentView" 
        xmlns:Avalon="http://icsharpcode.net/sharpdevelop/avalonedit" 
        mc:Ignorable="d"
        Title="Nihon - User Interface" AllowsTransparency="False" x:Name="MainWindow" KeyDown="KeyHandler" MouseDown="MouseHandler" Loaded="OnLoad" Height="300" Width="605" MinHeight="345" MinWidth="605" WindowStartupLocation="CenterScreen" WindowStyle="None" ResizeMode="CanResize" Background="#FF1A1B20">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CorneredSearchBox" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Border x:Name="border" CornerRadius="3" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Margin="0,0,22,0"/>
                            </Border>
                            <Ellipse HorizontalAlignment="Left" Height="9" Margin="131.5,5.333,0,0" VerticalAlignment="Top" Width="9.25" Fill="{x:Null}" Stroke="#FF24252B"/>
                            <Border BorderBrush="#FF24252B" BorderThickness="1" HorizontalAlignment="Left" Height="5.125" Margin="131.25,13.208,0,0" VerticalAlignment="Top" Width="1.125" RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="38.888"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Border.RenderTransform>
                            </Border>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="closebutton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="3" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="RadioButton.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FF707070"/>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="#FF212121"/>
        <Style x:Key="sidebarbuttons" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Border x:Name="radioButtonBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="100" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,2,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Hidden">
                                <Grid x:Name="markGrid" Margin="2">
                                    <Ellipse x:Name="optionMark" Fill="{StaticResource RadioButton.Static.Glyph}" MinWidth="6" MinHeight="6" Opacity="0"/>
                                </Grid>
                            </Border>
                            <Border x:Name="borderclass" BorderBrush="{x:Null}" CornerRadius="5" BorderThickness="1" Height="32" VerticalAlignment="Top" Width="Auto" Background="#FF17191D"/>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="0" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="34"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="click">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="one">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-0.002">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="one">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.152">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="one">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.2">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="checkcloud">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                <EasingColorKeyFrame KeyTime="0:0:0.4" Value="#FFB74646">
                    <EasingColorKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingColorKeyFrame.EasingFunction>
                </EasingColorKeyFrame>
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF1C1E23"/>
                <EasingColorKeyFrame KeyTime="0:0:0.4" Value="#FF231C1D">
                    <EasingColorKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingColorKeyFrame.EasingFunction>
                </EasingColorKeyFrame>
            </ColorAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="path">
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path1">
                <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF3B4352"/>
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1">
                <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF17191D"/>
            </ColorAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dot4">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="Dot4">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="path3">
                <EasingDoubleKeyFrame KeyTime="0" Value="1.5"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.5"/>
            </DoubleAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path3">
                <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF3B4352"/>
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path3">
                <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF17191D"/>
            </ColorAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="Dot2">
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="-7.999">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dot2">
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path2">
                <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF3B4352"/>
            </ColorAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="Dot1">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="Dot3">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dot1">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dot3">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="path1">
                <EasingDoubleKeyFrame KeyTime="0" Value="1.5"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.5"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="checksettings">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path2">
                <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FFB74646"/>
            </ColorAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="path2">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.795"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.908">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>

            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="path2">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.333"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.268">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="path2">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.785"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0.877">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="path2">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="-0.866"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-0.767">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#FF17191D"/>
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#FF3B4352"/>
            </ColorAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="path">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1.5"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="Dot2">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="5">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dot2">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="Dot3">
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-8">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dot3">
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1">
                <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#FF17191D"/>
            </ColorAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dot4">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="Dot4">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="path3">
                <EasingDoubleKeyFrame KeyTime="0" Value="1.5"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.5"/>
            </DoubleAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path3">
                <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF3B4352"/>
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path3">
                <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF17191D"/>
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path1">
                <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#FF3B4352"/>
            </ColorAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="path1">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1.5"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="Dot1">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dot1">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="checkhome">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="path1">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dot4">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="Dot4">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="path3">
                <EasingDoubleKeyFrame KeyTime="0" Value="1.5"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.5"/>
            </DoubleAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path3">
                <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF3B4352"/>
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path3">
                <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF17191D"/>
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1">
                <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF1C1E23"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFB74646">
                    <EasingColorKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingColorKeyFrame.EasingFunction>
                </EasingColorKeyFrame>
            </ColorAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="path1">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1.067">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="path1">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1.038">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="path1">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-0.1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="path1">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.05">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="Dot1">
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-8">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dot1">
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                <EasingColorKeyFrame KeyTime="0:0:0.4" Value="#FF17191D"/>
            </ColorAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="path">
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1.5"/>
            </DoubleAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                <EasingColorKeyFrame KeyTime="0:0:0.4" Value="#FF3B4352"/>
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path2">
                <EasingColorKeyFrame KeyTime="0:0:0.4" Value="#FF3B4352"/>
            </ColorAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="Dot2">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="Dot3">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dot2">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dot3">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="Overmenu">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#FFB74646"/>
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border1">
                <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#FFB74646"/>
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border2">
                <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#FFB74646"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
        <Style x:Key="TopButtons" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="ovr">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="lv">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.6"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Border x:Name="border" CornerRadius="4" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Opacity="0.6"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="lv_BeginStoryboard" Storyboard="{StaticResource lv}"/>
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource ovr}"/>
                                </Trigger.EnterActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="leavemenu">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#FFA0A6B7"/>
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border1">
                <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#FFA0A6B7"/>
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border2">
                <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#FFA0A6B7"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
        <Style x:Key="Toggle" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Hidden">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Rectangle Fill="#FF2B303D" HorizontalAlignment="Left" Height="11.744" Margin="19.975,10,0,0" RadiusY="6.444" RadiusX="6.444" VerticalAlignment="Top" Width="31"/>
                            <Rectangle Fill="#FF696C80" HorizontalAlignment="Left" Height="16.1" Margin="19.975,7.768,0,0" RadiusY="10.825" RadiusX="10.825" VerticalAlignment="Top" Width="16.106"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FluentToggle" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="over">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF41485C"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle1">
                                    <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF9195B6"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="check">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="rectangle1">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="17.067">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <PowerEase EasingMode="EaseInOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle1">
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFB74646">
                                        <EasingColorKeyFrame.EasingFunction>
                                            <PowerEase EasingMode="EaseInOut"/>
                                        </EasingColorKeyFrame.EasingFunction>
                                    </EasingColorKeyFrame>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFB74646">
                                        <EasingColorKeyFrame.EasingFunction>
                                            <PowerEase EasingMode="EaseInOut"/>
                                        </EasingColorKeyFrame.EasingFunction>
                                    </EasingColorKeyFrame>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="uncheck">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="rectangle1">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-0.133">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <PowerEase EasingMode="EaseInOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle1">
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF696C80">
                                        <EasingColorKeyFrame.EasingFunction>
                                            <PowerEase EasingMode="EaseInOut"/>
                                        </EasingColorKeyFrame.EasingFunction>
                                    </EasingColorKeyFrame>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
                                    <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FF2B303D">
                                        <EasingColorKeyFrame.EasingFunction>
                                            <PowerEase EasingMode="EaseInOut"/>
                                        </EasingColorKeyFrame.EasingFunction>
                                    </EasingColorKeyFrame>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Hidden">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Rectangle x:Name="rectangle" Fill="{x:Null}" HorizontalAlignment="Left" Height="18.032" Margin="14.975,7.768,0,0" RadiusY="6.733" RadiusX="6.733" VerticalAlignment="Top" Width="36" Stroke="#FF2B303D"/>
                            <Rectangle x:Name="rectangle1" Fill="#FF696C80" HorizontalAlignment="Left" Height="12.32" Margin="18.033,10.501,0,0" RadiusY="10.825" RadiusX="10.825" VerticalAlignment="Top" Width="12.774" RenderTransformOrigin="0.5,0.5">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="true"/>
                                    <Condition Property="IsChecked" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard x:Name="Uwu" Storyboard="{StaticResource over}"/>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="Uwu"/>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="check_BeginStoryboard" Storyboard="{StaticResource uncheck}"/>
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="uncheck_BeginStoryboard" Storyboard="{StaticResource check}"/>
                                </Trigger.EnterActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
            <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Background="{x:Null}" BorderBrush="{x:Null}" />
                <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
            </Grid>
        </ControlTemplate>
        <SolidColorBrush x:Key="ScrollBar.Static.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Glyph" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Glyph" Color="#FF404351"/>
        <SolidColorBrush x:Key="ScrollBar.Disabled.Glyph" Color="#BFBFBF"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Glyph" Color="#606060"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Background" Color="#DADADA"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Border" Color="#DADADA"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Background" Color="#606060"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Border" Color="#606060"/>
        <SolidColorBrush x:Key="ScrollBar.Disabled.Background" Color="#F0F0F0"/>
        <SolidColorBrush x:Key="ScrollBar.Disabled.Border" Color="#F0F0F0"/>
        <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="border" BorderThickness="1" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Thumb" Color="#A6A6A6"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Thumb" Color="#606060"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Thumb" Color="#CDCDCD"/>
        <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Rectangle x:Name="rectangle" Fill="#FF404351" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}" Margin="4.8,0,4.533,0" RadiusY="2.02" RadiusX="2.02"/>
                        <ControlTemplate.Triggers>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Rectangle x:Name="rectangle" Fill="#FF404351" Height="6.8" SnapsToDevicePixels="True" Width="{TemplateBinding Width}" RadiusY="2.02" RadiusX="2.02"/>
                        <ControlTemplate.Triggers>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Background" Value="{StaticResource ScrollBar.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ScrollBar.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1,0"/>
            <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" SnapsToDevicePixels="true">
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                <RowDefinition Height="0.00001*"/>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            </Grid.RowDefinitions>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1"/>
                            <RepeatButton x:Name="PART_LineUpButton" Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Background="#FFDDDDDD">
                                <Path x:Name="ArrowTop" Data="M 1.81,7 C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 z" Fill="#FF404351" Margin="0" Stretch="Uniform" Height="7" Width="5" RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="-90"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </RepeatButton>
                            <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumbVertical}"/>
                                </Track.Thumb>
                            </Track>
                            <RepeatButton x:Name="PART_LineDownButton" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" Style="{StaticResource ScrollBarButton}">
                                <Path x:Name="ArrowBottom" Data="M 1.81,7 C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 z" Fill="#FF404351" Stretch="Uniform" RenderTransformOrigin="0.5,0.5" Width="5" Height="7">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="90"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </RepeatButton>
                        </Grid>
                        <ControlTemplate.Triggers>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="MinWidth" Value="0"/>
                    <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                    <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                    <Setter Property="BorderThickness" Value="0,1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                        <ColumnDefinition Width="0.00001*"/>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                    </Grid.ColumnDefinitions>
                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1"/>
                                    <RepeatButton x:Name="PART_LineLeftButton" Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                                        <Path x:Name="ArrowLeft" Data="M 3.18,7 C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7 z" Fill="#FF404351" Margin="3" Stretch="Uniform"/>
                                    </RepeatButton>
                                    <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumbHorizontal}"/>
                                        </Track.Thumb>
                                    </Track>
                                    <RepeatButton x:Name="PART_LineRightButton" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                                        <Path x:Name="ArrowRight" Data="M 1.81,7 C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 z" Fill="#FF404351" Margin="3" Stretch="Uniform"/>
                                    </RepeatButton>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="true"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="true"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="false"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="false"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                                    </MultiDataTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                                        <Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="Button" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="over">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                    <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF23242B"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                    <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF424756"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="click">
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                    <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF4E576F"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                    <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF26282F"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Border x:Name="border" CornerRadius="3" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" BorderBrush="#FF2B303D" Background="#FF1A1B20">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="awa" Storyboard="{StaticResource over}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="awa"/>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Trigger.EnterActions>
                                    <BeginStoryboard x:Name="wa" Storyboard="{StaticResource click}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="wa"/>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="Dropdownbuttons" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="over"/>
                            <Storyboard x:Key="click"/>
                        </ControlTemplate.Resources>
                        <Border x:Name="border" CornerRadius="3" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" BorderBrush="{x:Null}" Background="#FF17191D">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation To="#FFB74646" Storyboard.TargetProperty="Foreground.Color" Duration="0:0:0.25" RepeatBehavior="1x" AutoReverse="False"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation To="#FF505766" Storyboard.TargetProperty="Foreground.Color" Duration="0:0:0.25" RepeatBehavior="1x" AutoReverse="False"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="DROPDOWN">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DropDownMenu">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="DropDownMenu">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="73">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Blackcloak">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Blackcloak">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="UNDROP">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DropDownMenu">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="DropDownMenu">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Blackcloak">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.6" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Blackcloak">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Style x:Key="Togglebutton" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="ovr">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="lv">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.6"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Border x:Name="border" CornerRadius="4" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Opacity="0.6"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="lv_BeginStoryboard" Storyboard="{StaticResource lv}"/>
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource ovr}"/>
                                </Trigger.EnterActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- /* TabItem Button */ -->
        <Style
            TargetType="{x:Type Button}"
            x:Key="ButtonStyle">
            <Setter Property="Background" Value="#FF494949" />
            <Setter Property="Foreground" Value="#FF707386" />
            <Setter Property="BorderBrush" Value="#FF191919"/>
            <Setter
                Property="Template">
                <Setter.Value>
                    <ControlTemplate
                        TargetType="{x:Type Button}">
                        <Border
                            CornerRadius="2"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger
                    Property="IsMouseOver"
                    Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>

                                <ColorAnimation
                                    To= "#FFB74646"
                                    Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
                                    FillBehavior="HoldEnd"
                                    Duration="0:0:0.25"
                                    AutoReverse="False"
                                    RepeatBehavior="1x"/>

                            </Storyboard>

                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>

                                <ColorAnimation
                                    Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
                                    FillBehavior="HoldEnd"
                                    Duration="0:0:0.25"
                                    AutoReverse="False"
                                    RepeatBehavior="1x" />

                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>

            </Style.Triggers>
        </Style>

        <!-- /* TabControl */ -->
        <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC"/>
        <Style x:Key="TabControlStyle" TargetType="{x:Type TabControl}">
            <Setter Property="Padding" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                <RowDefinition x:Name="RowDefinition1" Height="*"/>
                            </Grid.RowDefinitions>
                            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled" CanContentScroll="False" Padding="1,0,4,1">
                                <StackPanel Orientation="Horizontal">
                                    <TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                                    <Button x:Name="AddTabButton" Click="AddTabButton_Click" Style="{StaticResource ButtonStyle}" Content="&#xE710;" Width="20" Height="20" Background="#00000000" BorderBrush="#00191919" FontFamily="Segoe Fluent Icons" FontSize="13">

                                    </Button>
                                </StackPanel>
                            </ScrollViewer>
                            <Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- /* TabItem */ -->
        <LinearGradientBrush x:Key="TabItem.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#F0F0F0" Offset="0.0"/>
            <GradientStop Color="#E5E5E5" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="TabItem.Static.Border" Color="#ACACAC"/>
        <LinearGradientBrush x:Key="TabItem.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#ECF4FC" Offset="0.0"/>
            <GradientStop Color="#DCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="#7EB4EA"/>
        <SolidColorBrush x:Key="TabItem.Selected.Background1" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="TabItem.Selected.Border1" Color="#ACACAC"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#F0F0F0"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#D9D9D9"/>
        <Style x:Key="TabItemStyle" TargetType="{x:Type TabItem}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="6,2,6,2"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true" Height="28" Width="80" Margin="4,0,0,0">
                            <Border CornerRadius="2" x:Name="mainBorder" BorderThickness="1" Margin="0" Width="Auto" Background="#FF17191D" BorderBrush="#FF262A34">
                                <StackPanel Orientation="Horizontal">
                                    <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="3,6,50,5.105" Width="96" Height="18"/>
                                    <Button x:Name="CloseTabButton" Click="CloseTabButton_Click" Style="{StaticResource ButtonStyle}" Content="&#xE711;" FontFamily="Segoe Fluent Icons" Width="17" Background="#00000000" Foreground="#FF707386" BorderBrush="#00191919" Margin="-161,6,0,4.875" Height="17" VerticalAlignment="Center" FontSize="11" />
                                </StackPanel>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.5" Storyboard.TargetProperty="Width" To="80" Storyboard.TargetName="templateRoot">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>

                                            </DoubleAnimation>
                                            <ColorAnimation
                                    To= "#FF17191D"
                                    Storyboard.TargetName="mainBorder"
                                    Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                    FillBehavior="HoldEnd"
                                    Duration="0:0:0.25"
                                    AutoReverse="False"
                                    RepeatBehavior="1x"/>

                                            <ColorAnimation
                                    To= "#FFB74646"
                                    Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
                                    FillBehavior="HoldEnd"
                                    Duration="0:0:0.25"
                                    AutoReverse="False"
                                    RepeatBehavior="1x"/>
                                            <ColorAnimation
                                    To= "#FFB74646"
                                    Storyboard.TargetName="mainBorder"
                                    Storyboard.TargetProperty="(Control.BorderBrush).(SolidColorBrush.Color)"
                                    FillBehavior="HoldEnd"
                                    Duration="0:0:0.25"
                                    AutoReverse="False"
                                    RepeatBehavior="1x"/>

                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.5" Storyboard.TargetProperty="Width" To="65" Storyboard.TargetName="templateRoot">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>

                                            </DoubleAnimation>
                                            <ColorAnimation
                                    To= "#FF17191D"
                                    Storyboard.TargetName="mainBorder"
                                    Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)"
                                    FillBehavior="HoldEnd"
                                    Duration="0:0:0.25"
                                    AutoReverse="False"
                                    RepeatBehavior="1x"/>

                                            <ColorAnimation
                                    To= "#FF707386"
                                    Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
                                    FillBehavior="HoldEnd"
                                    Duration="0:0:0.25"
                                    AutoReverse="False"
                                    RepeatBehavior="1x"/>
                                            <ColorAnimation
                                    To= "#FF262A34"
                                    Storyboard.TargetName="mainBorder"
                                    Storyboard.TargetProperty="(Control.BorderBrush).(SolidColorBrush.Color)"
                                    FillBehavior="HoldEnd"
                                    Duration="0:0:0.25"
                                    AutoReverse="False"
                                    RepeatBehavior="1x"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- /* TreeView */ -->
        <!--x:Key="TreeViewStyle"-->
        <SolidColorBrush x:Key="ListBorder" Color="#828790"/>
        <Style TargetType="{x:Type TreeView}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeView}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ScrollViewer x:Name="_tv_scrollviewer_" Template="{StaticResource ScrollViewerStyle}" Background="{TemplateBinding Background}" CanContentScroll="false" Focusable="false" HorizontalScrollBarVisibility="Auto" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalScrollBarVisibility="Auto" >
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                                <Setter Property="CanContentScroll" TargetName="_tv_scrollviewer_" Value="true"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel/>
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- /* TreeView Item */ -->
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Width="15"
                      Height="13"
                      Background="Transparent">
                            <Image x:Name="expanderimage" Margin="1.833,3.69,0,3.69"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Center" Width="9.416" RenderTransformOrigin="0.5,0.5">

                                <Image.Source>
                                    <DrawingImage>
                                        <DrawingImage.Drawing>
                                            <DrawingGroup ClipGeometry="M0,0 V24 H24 V0 H0 Z">
                                                <GeometryDrawing Geometry="F1 M24,24z M0,0z M6,9L6,9 12,15 18,9">
                                                    <GeometryDrawing.Pen>
                                                        <Pen Brush="#606060" Thickness="3" StartLineCap="Round" EndLineCap="Round" LineJoin="Round" />
                                                    </GeometryDrawing.Pen>
                                                </GeometryDrawing>
                                            </DrawingGroup>
                                        </DrawingImage.Drawing>
                                    </DrawingImage>
                                </Image.Source>
                            </Image>

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="LayoutTransform" TargetName="expanderimage">
                                    <Setter.Value>
                                        <TransformGroup>
                                            <RotateTransform CenterX="100" Angle="-90"/>
                                        </TransformGroup>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="0,0,0,0"
                               Opacity="0"
                               Stroke="Black"
                               StrokeDashArray="1 2"
                               StrokeThickness="5" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Padding" Value="5,0,0,0" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" MinWidth="20" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <ToggleButton x:Name="Expander"
                                  ClickMode="Press"
                                  IsChecked="{Binding Path=IsExpanded,
                                                      RelativeSource={RelativeSource TemplatedParent}}"
                                  Style="{StaticResource ExpandCollapseToggleStyle}" />
                            <Border CornerRadius="4" Name="Bd"
                            Grid.Column="1"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                                <ContentPresenter x:Name="PART_Header"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          ContentSource="Header" />
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Grid.ColumnSpan="2">
                                <ItemsPresenter.LayoutTransform>
                                    <ScaleTransform ScaleY="1" />
                                </ItemsPresenter.LayoutTransform>
                            </ItemsPresenter>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.3"
                                                     Storyboard.TargetName="ItemsHost"
                                                     Storyboard.TargetProperty="LayoutTransform.ScaleY"
                                                     To="0" >
                                                <DoubleAnimation.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.1"
                                                     Storyboard.TargetName="ItemsHost"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="0" >
                                                <DoubleAnimation.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2"
                                                     Storyboard.TargetName="ItemsHost"
                                                     Storyboard.TargetProperty="LayoutTransform.ScaleY"
                                                     To="1" >
                                                <DoubleAnimation.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.1"
                                                     Storyboard.TargetName="ItemsHost"
                                                     Storyboard.TargetProperty="Opacity" From="0"
                                                     To="1" >
                                                <DoubleAnimation.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsExpanded" Value="true">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2"
                                                     Storyboard.TargetName="ItemsHost"
                                                     Storyboard.TargetProperty="LayoutTransform.ScaleY"
                                                     To="1" />
                                            <DoubleAnimation Duration="0:0:0.1"
                                                     Storyboard.TargetName="ItemsHost" From="0"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="1" >
                                                <DoubleAnimation.EasingFunction>
                                                    <CircleEase EasingMode="EaseIn"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>

                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2"
                                                     Storyboard.TargetName="ItemsHost"
                                                     Storyboard.TargetProperty="LayoutTransform.ScaleY"
                                                     To="0" >
                                                <DoubleAnimation.EasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Duration="0:0:0.1"
                                                     Storyboard.TargetName="ItemsHost"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="0" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false" />
                                    <Condition Property="Width" Value="Auto" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false" />
                                    <Condition Property="Height" Value="Auto" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
                            </MultiTrigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="Transparent" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true" />
                                    <Condition Property="IsSelectionActive" Value="false" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="Transparent" />
                                <Setter Property="Foreground" Value="#FF2B303D" />
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#FF2B303D" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- /* Transparent TextBox */ -->
        <SolidColorBrush
				Color="Transparent"
				x:Key="TextBox.Static.Border" />
        <SolidColorBrush
				Color="Transparent"
				x:Key="TextBox.MouseOver.Border" />
        <SolidColorBrush
				Color="Transparent"
				x:Key="TextBox.Focus.Border" />
        <Style
				TargetType="{x:Type TextBox}"
				x:Key="TransparentTextBox">
            <Setter
					Property="Background"
					Value="Transparent" />
            <Setter
					Property="BorderBrush"
					Value="{DynamicResource TextBox.Static.Border}" />
            <Setter
					Property="Foreground"
					Value="Transparent" />
            <Setter
					Property="BorderThickness"
					Value="1" />
            <Setter
					Property="KeyboardNavigation.TabNavigation"
					Value="None" />
            <Setter
					Property="HorizontalContentAlignment"
					Value="Left" />
            <Setter
					Property="FrameworkElement.FocusVisualStyle"
					Value="{x:Null}" />
            <Setter
					Property="UIElement.AllowDrop"
					Value="True" />
            <Setter
					Property="ScrollViewer.PanningMode"
					Value="VerticalFirst" />
            <Setter
					Property="Stylus.IsFlicksEnabled"
					Value="False" />
            <Setter
					Property="Template">
                <Setter.Value>
                    <ControlTemplate
							TargetType="{x:Type TextBox}">
                        <Border
								Name="border"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Background="{TemplateBinding Background}"
								SnapsToDevicePixels="True">
                            <ScrollViewer
									Name="PART_ContentHost"
									Focusable="False"
									HorizontalScrollBarVisibility="Hidden"
									VerticalScrollBarVisibility="Hidden" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger
									Property="IsEnabled"
									Value="False">
                                <Setter
										TargetName="border"
										Property="UIElement.Opacity"
										Value="1" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition
								Property="TextBoxBase.IsInactiveSelectionHighlightEnabled"
								Value="True" />
                        <Condition
								Property="TextBoxBase.IsSelectionActive"
								Value="False" />
                    </MultiTrigger.Conditions>
                    <Setter
							Property="TextBoxBase.SelectionBrush"
							Value="Transparent" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Storyboard x:Key="installationcheck">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="path3">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path3">
                <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF1C1E23"/>
                <EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFB74646">
                    <EasingColorKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingColorKeyFrame.EasingFunction>
                </EasingColorKeyFrame>
            </ColorAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="path3">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1.067">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="path3">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1.038">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="path3">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-0.1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="path3">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.05">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="Dot4">
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-8">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dot4">
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>


            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                <EasingColorKeyFrame KeyTime="0:0:0.4" Value="#FF17191D"/>
            </ColorAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="path">
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1.5"/>
            </DoubleAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                <EasingColorKeyFrame KeyTime="0:0:0.4" Value="#FF3B4352"/>
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path2">
                <EasingColorKeyFrame KeyTime="0:0:0.4" Value="#FF3B4352"/>
            </ColorAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.StrokeThickness)" Storyboard.TargetName="path1">
                <EasingDoubleKeyFrame KeyTime="0" Value="1.5"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.5"/>
            </DoubleAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path1">
                <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF3B4352"/>
            </ColorAnimationUsingKeyFrames>
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path1">
                <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF17191D"/>
            </ColorAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="Dot2">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="Dot3">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="Dot1">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dot2">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dot3">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Dot1">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <PowerEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <SolidColorBrush x:Key="PasswordBox.MouseOver.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="PasswordBox.Focus.Border" Color="Transparent"/>
        <Style x:Key="PasswordBoxStyle" TargetType="{x:Type PasswordBox}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="True"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" CornerRadius="4">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="border" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="True"/>
                        <Condition Property="IsSelectionActive" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="Transparent"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>
    <Window.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard x:Name="checkhome_BeginStoryboard" Storyboard="{StaticResource checkhome}"/>

        </EventTrigger>
        <EventTrigger RoutedEvent="ToggleButton.Checked" SourceName="ExecutionButton">
            <BeginStoryboard x:Name="checkhome_BeginStoryboard1" Storyboard="{StaticResource checkhome}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ToggleButton.Checked" SourceName="GameHubButton">
            <BeginStoryboard x:Name="checkcloud_BeginStoryboard1" Storyboard="{StaticResource checkcloud}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ToggleButton.Checked" SourceName="SettingsButton">
            <BeginStoryboard x:Name="checksettings_BeginStoryboard1" Storyboard="{StaticResource checksettings}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.MouseEnter" SourceName="TreeViewer">
            <BeginStoryboard x:Name="Overmenu_BeginStoryboard1" Storyboard="{StaticResource Overmenu}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.MouseLeave" SourceName="TreeViewer">
            <BeginStoryboard x:Name="leavemenu_BeginStoryboard1" Storyboard="{StaticResource leavemenu}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ToggleButton.Checked" SourceName="ToggleButton">
            <BeginStoryboard x:Name="DROPDOWN_BeginStoryboard1" Storyboard="{StaticResource DROPDOWN}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ToggleButton.Unchecked" SourceName="ToggleButton">
            <BeginStoryboard x:Name="UNDROP_BeginStoryboard1" Storyboard="{StaticResource UNDROP}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.MouseDown" SourceName="Blackcloak">
            <BeginStoryboard x:Name="UNDROP_BeginStoryboard" Storyboard="{StaticResource UNDROP}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ToggleButton.Checked" SourceName="InstallationButton">
            <BeginStoryboard x:Name="installationcheck_BeginStoryboard1" Storyboard="{StaticResource installationcheck}"/>
        </EventTrigger>
    </Window.Triggers>
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="12" ResizeBorderThickness="7"/>
    </WindowChrome.WindowChrome>
    <Grid x:Name="InternalBox">

        <!-- Background Image -->
        <Image x:Name="ImageBox" Stretch="Fill" Margin="0,0,0,0" />

        <Border x:Name="TopBar" BorderThickness="1" CornerRadius="6 6 0 0" Height="55.397" VerticalAlignment="Top" Background="#FF17191D" BorderBrush="#FF17191D">
        </Border>
        <Button x:Name="TreeViewer" Click="TreeViewer_Click" HorizontalAlignment="Left" Height="31.067" Margin="15,13.533,0,0" VerticalAlignment="Top" Width="33.067" Style="{DynamicResource closebutton}" Background="#FF17191D" BorderBrush="{x:Null}" Cursor="Hand">
            <Grid Height="25.667" Width="27.6">
                <Grid x:Name="one" Margin="6.4,7.917,6.2,7.85" RenderTransformOrigin="0.5,0.5">
                    <Grid.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Grid.RenderTransform>
                    <Border x:Name="border" BorderThickness="1" HorizontalAlignment="Left" Height="3.3" VerticalAlignment="Top" Width="15" Background="#FFA0A6B7"/>
                    <Border x:Name="border1" BorderThickness="1" HorizontalAlignment="Left" Height="3.3" Margin="0,3.3,0,0" VerticalAlignment="Top" Width="15" Background="#FFA0A6B7"/>
                    <Border x:Name="border2" BorderThickness="1" HorizontalAlignment="Left" Height="3.3" Margin="0,6.6,0,0" VerticalAlignment="Top" Width="15" Background="#FFA0A6B7"/>
                </Grid>
                <Grid x:Name="one_Copy" Margin="7.233,7.917,7.366,7.85" RenderTransformOrigin="0.5,0.5" Width="14">
                    <Grid.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Grid.RenderTransform>
                </Grid>
            </Grid>
        </Button>

        <!-- Execution Button -->
        <RadioButton x:Name="ExecutionButton" Click="PageHandler" HorizontalAlignment="Left" Height="32" Margin="58.133,13.134,0,0" VerticalAlignment="Top" Width="34" Style="{DynamicResource sidebarbuttons}" IsChecked="True" Cursor="Hand">
            <Grid HorizontalAlignment="Left" Height="32" VerticalAlignment="Top" Width="33.067">
                <Path x:Name="path1" Data="M39.5,43L30.5,43C29.119,43,28,41.881,28,40.5L28,31.5C28,30.395,27.105,29.5,26,29.5L22,29.5C20.895,29.5,20,30.395,20,31.5L20,40.5C20,41.881,18.881,43,17.5,43L8.5,43C7.119,43,6,41.881,6,40.5L6,21.413C6,19.114,7.054,16.942,8.859,15.52L23.071,4.321C23.616,3.893,24.384,3.893,24.928,4.321L39.142,15.52C40.947,16.942,42,19.113,42,21.411L42,40.5C42,41.881,40.881,43,39.5,43z" HorizontalAlignment="Left" Height="13" Margin="6,11,0,0" Stretch="Fill" VerticalAlignment="Top" Width="12" Fill="#FF17191D" Stroke="#FF3B4352" StrokeThickness="1.5" RenderTransformOrigin="0.5,0.5">
                    <Path.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
            </Grid>
        </RadioButton>

        <!-- Game Hub Button -->
        <RadioButton x:Name="GameHubButton" Click="PageHandler" HorizontalAlignment="Left" Height="32" Margin="96.133,13.533,0,0" VerticalAlignment="Top" Width="34" Style="{DynamicResource sidebarbuttons}" Cursor="Hand">
            <Grid HorizontalAlignment="Left" Height="32" VerticalAlignment="Top" Width="33.067">
                <Path x:Name="path" Data="M39,21L38.423,21C37.67,13.707 31.489,8 24,8 16.511,8 10.33,13.707 9.577,21L9,21C4.038,21 0,25.038 0,30 0,34.962 4.038,39 9,39L39,39C43.962,39 48,34.962 48,30 48,25.038 43.962,21 39,21z" HorizontalAlignment="Left" Height="12" Margin="6,11,0,0" Stretch="Fill" VerticalAlignment="Top" Width="15" Stroke="#FF3B4352" StrokeThickness="1.5" Fill="#FF17191D"/>
            </Grid>
        </RadioButton>

        <!-- Settings Button -->
        <RadioButton x:Name="SettingsButton" Click="PageHandler" HorizontalAlignment="Left" Height="32" Margin="134.133,13.533,0,0" VerticalAlignment="Top" Width="34" Style="{DynamicResource sidebarbuttons}" Cursor="Hand" BorderBrush="{x:Null}">
            <Grid HorizontalAlignment="Left" Height="32" VerticalAlignment="Top" Width="33.067">
                <Path x:Name="path2" Data="M7.9785156,5.9804688A2.0002,2.0002,0,0,0,6.5859375,9.4140625L9.9492188,12.777344C7.4837194,15.857842 6,19.756743 6,24 6,28.243257 7.4837194,32.142158 9.9492188,35.222656L6.5859375,38.585938A2.0002,2.0002,0,1,0,9.4140625,41.414062L12.777344,38.050781C15.857842,40.516281 19.756743,42 24,42 24.346,42 24.684391,41.966266 25.025391,41.947266 24.259391,40.740266 23.688516,39.400797 23.353516,37.966797 15.935516,37.625797 10,31.501 10,24 10,20.220424 11.512527,16.792784 13.955078,14.271484A2.0002,2.0002,0,0,0,14.273438,13.953125C16.794555,11.511706 20.221415,10 24,10 27.832987,10 31.299253,11.558912 33.826172,14.064453A2.0002,2.0002,0,0,0,33.990234,14.224609C36.049299,16.333621 37.455356,19.083402 37.863281,22.148438 39.326281,22.358438 40.709656,22.804938 41.972656,23.460938 41.852265,19.430522 40.390432,15.739488 38.037109,12.791016L41.414062,9.4140625A2.0002,2.0002,0,0,0,39.960938,5.9804688A2.0002,2.0002,0,0,0,38.585938,6.5859375L35.224609,9.9472656C32.147596,7.4788778 28.245055,6 24,6 19.756743,6 15.857842,7.4837194 12.777344,9.9492188L9.4140625,6.5859375A2.0002,2.0002,0,0,0,7.9785156,5.9804688z M36,24C35.413,24,34.838344,24.049531,34.277344,24.144531L33.931641,25.576172C33.394641,27.801172,31.105156,29.123609,28.910156,28.474609L27.705078,28.117188C26.981078,29.050187,26.401,30.110813,26,31.257812L26.894531,32.117188C28.529531,33.691187,28.529531,36.308813,26.894531,37.882812L26,38.742188C26.401,39.889187,26.980078,40.948812,27.705078,41.882812L28.910156,41.525391C31.105156,40.876391,33.394641,42.198828,33.931641,44.423828L34.277344,45.855469C34.838344,45.950469 35.413,46 36,46 36.587,46 37.161656,45.950469 37.722656,45.855469L38.068359,44.423828C38.605359,42.198828,40.894844,40.876391,43.089844,41.525391L44.294922,41.882812C45.018922,40.949813,45.599,39.889187,46,38.742188L45.105469,37.882812C43.470469,36.309812,43.470469,33.690188,45.105469,32.117188L46,31.257812C45.599,30.110813,45.019922,29.051187,44.294922,28.117188L43.089844,28.474609C40.894844,29.123609,38.605359,27.801172,38.068359,25.576172L37.722656,24.144531C37.161656,24.049531,36.587,24,36,24z M36,32C37.657,32 39,33.343 39,35 39,36.657 37.657,38 36,38 34.343,38 33,36.657 33,35 33,33.343 34.343,32 36,32z" HorizontalAlignment="Left" Height="13" Margin="6,11,0,0" Stretch="Fill" VerticalAlignment="Top" Width="13" Fill="#FF3B4352" RenderTransformOrigin="0.5,0.5">
                    <Path.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
            </Grid>
        </RadioButton>

        <!-- Installation Button -->
        <RadioButton x:Name="InstallationButton" Click="PageHandler" HorizontalAlignment="Left" Height="32" Margin="168,13.533,0,0" VerticalAlignment="Top" Width="34" Style="{DynamicResource sidebarbuttons}" Cursor="Hand" BorderBrush="{x:Null}">
            <Grid HorizontalAlignment="Left" Height="32" VerticalAlignment="Top" Width="33.067">
                <Path x:Name="path3" Data="M3,3H21V7H3V3M4,8H20V21H4V8M9.5,11A0.5,0.5 0 0,0 9,11.5V13H15V11.5A0.5,0.5 0 0,0 14.5,11H9.5Z" StrokeThickness="0.9" HorizontalAlignment="Left" Height="13" Margin="6,11,0,0" Stretch="Fill" VerticalAlignment="Top" Width="13" RenderTransformOrigin="0.5,0.5" Stroke="#FF3B4352" Fill="#FF17191D">
                    <Path.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Path.RenderTransform>
                </Path>
            </Grid>
        </RadioButton>

        <Rectangle x:Name="Dot4" Fill="#FFB74646" HorizontalAlignment="Left" Height="3" Margin="183.15,52.356,0,0" VerticalAlignment="Top" Width="3" RadiusY="1.492" RadiusX="1.492" Opacity="0" RenderTransformOrigin="0.5,0.5">
            <Rectangle.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Rectangle.RenderTransform>
        </Rectangle>
        <Rectangle x:Name="Dot3" Fill="#FFB74646" HorizontalAlignment="Left" Height="3.041" Margin="148.862,52.356,0,0" VerticalAlignment="Top" Width="2.983" RadiusY="1.492" RadiusX="1.492" Opacity="0" RenderTransformOrigin="0.5,0.5">
            <Rectangle.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Rectangle.RenderTransform>
        </Rectangle>
        <Rectangle x:Name="Dot2" Fill="#FFB74646" HorizontalAlignment="Left" Height="3.041" Margin="112.287,52.356,0,0" VerticalAlignment="Top" Width="2.983" RadiusY="1.492" RadiusX="1.492" Opacity="0" RenderTransformOrigin="0.5,0.5">
            <Rectangle.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Rectangle.RenderTransform>
        </Rectangle>
        <Rectangle x:Name="Dot1" Fill="#FFB74646" HorizontalAlignment="Left" Height="3.041" Margin="72.7,52.356,0,0" VerticalAlignment="Top" Width="3" RadiusY="1.492" RadiusX="1.492" Opacity="0" RenderTransformOrigin="0.5,0.5">
            <Rectangle.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Rectangle.RenderTransform>
        </Rectangle>

        <!-- Advertise Btn -->
        <Button x:Name="AdvertiseButton" Visibility="Hidden" Click="AdvertiseButton_Click" Style="{DynamicResource PopupButton}" FontSize="13" Content="WeAreDevs" HorizontalAlignment="Right" Height="27" Margin="0,15,47,0" VerticalAlignment="Top" Width="77" Background="Transparent" BorderBrush="Transparent" BorderThickness="1.5" FontFamily="/Nihon;component/Font's/#Rubik Medium" Padding="1,0,1,1" Foreground="#FF707386"/>

        <!-- Toggle Button -->
        <ToggleButton x:Name="ToggleButton" HorizontalAlignment="Right" Height="25.733" Margin="0,16,15,0" VerticalAlignment="Top" Width="26.533" Background="#FF17191D" BorderBrush="{x:Null}" Style="{DynamicResource Togglebutton}" Cursor="Hand">
            <Path Data="M14,4L18,4 18,8 14,8z M4,4L8,4 8,8 4,8z M24,4L28,4 28,8 24,8z M14,14L18,14 18,18 14,18z M4,14L8,14 8,18 4,18z M24,14L28,14 28,18 24,18z M14,24L18,24 18,28 14,28z M4,24L8,24 8,28 4,28z M24,24L28,24 28,28 24,28z" Fill="#FF5D687D" Height="10.5" Stretch="Fill" Width="11.6"/>
        </ToggleButton>

        <!-- Menu/Tab Control -->
        <TabControl x:Name="MenuControl" Background="{x:Null}" BorderBrush="{x:Null}" Margin="0,55,6,7">

            <!-- Execution Tab -->
            <TabItem x:Name="ExecutionTab" Header="TabItem" Width="0" Height="0">

                <!-- Internal Box -->
                <Grid Width="Auto" Height="Auto" x:Name="Execution" Margin="5,-6.603,-1,1.603" OpacityMask="Black">

                    <!--<Image RenderOptions.BitmapScalingMode="HighQuality" Opacity="0.2" Width="30" Height="30" Source="/Resources/Images/Logo's/Nihon White.png" Margin="0,8,7,0" VerticalAlignment="Top" HorizontalAlignment="Right"  />-->

                    <!-- Tab Control -->
                    <TabControl x:Name="EditorControl" Background="Transparent" BorderBrush="Transparent" Foreground="White" Style="{StaticResource TabControlStyle}" Margin="0, 50, 0, 0"/>

                    <!-- Execute/Cear/Open & Save/Attach Btn -->
                    <Button HorizontalAlignment="Left" x:Name="ExecuteButton" Click="ExecuteButton_Click" Content="Execute" Height="26.934" Margin="5,10,0,0" VerticalAlignment="Top" Width="60.8" Style="{DynamicResource Button}" Background="#FF1A1B20" BorderBrush="#FF2B303D" BorderThickness="1.5" FontFamily="Segoe UI Semibold" Padding="1,0,1,1" Foreground="#FF707386"/>
                    <Button x:Name="ClearButton" Click="ClearButton_Click" Content="Clear" HorizontalAlignment="Left" Height="27" Margin="71,10,0,0" VerticalAlignment="Top" Width="61" Style="{DynamicResource Button}" Background="#FF1A1B20" BorderBrush="#FF2B303D" BorderThickness="1.5" FontFamily="Segoe UI Semibold" Padding="1,0,1,1" Foreground="#FF707386"/>
                    <Button x:Name="OpenFileButton" Click="OpenFileButton_Click" Content="Open" HorizontalAlignment="Left" Height="26.934" Margin="137,10,0,0" VerticalAlignment="Top" Width="60.8" Style="{DynamicResource Button}" Background="#FF1A1B20" BorderBrush="#FF2B303D" BorderThickness="1.5" FontFamily="Segoe UI Semibold" Padding="1,0,1,1" Foreground="#FF707386"/>
                    <Button x:Name="SaveFileButton" Click="SaveFileButton_Click" Content="Save" HorizontalAlignment="Left" Height="26.934" Margin="203,10,0,0" VerticalAlignment="Top" Width="60.8" Style="{DynamicResource Button}" Background="#FF1A1B20" BorderBrush="#FF2B303D" BorderThickness="1.5" FontFamily="Segoe UI Semibold" Padding="1,0,1,1" Foreground="#FF707386"/>
                    <Button x:Name="AttachButton" Click="AttachButton_Click" Content="Attach" HorizontalAlignment="Left" Height="26.934" Margin="269,10,0,0" VerticalAlignment="Top" Width="60.8" Style="{DynamicResource Button}" Background="#FF1A1B20" BorderBrush="#FF2B303D" BorderThickness="1.5" FontFamily="Segoe UI Semibold" Padding="1,0,1,1" Foreground="#FF707386"/>

                </Grid>

            </TabItem>

            <!-- Settings Tab -->
            <TabItem Name="SettingsTab" Header="TabItem" Width="0" Height="0">

                <!-- Internal Box -->
                <Grid x:Name="Settings" Margin="5,0,-1,0" Width="Auto" Height="Auto">

                    <!-- Scroll Viewer -->
                    <ScrollViewer Width="Auto" Height="Auto" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Template="{DynamicResource ScrollViewerStyle}" Margin="0,0,0,10">
                        <Grid>

                            <!-- Safety Net -->
                            <TextBlock HorizontalAlignment="Left" Height="19" Margin="36.733,21.4,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="98" FontFamily="/Nihon;component/Font's/#Rubik Medium" FontSize="13" Foreground="#FF707386"><Run Text="Safety-Net"/><LineBreak/><Run/></TextBlock>
                            <TextBlock HorizontalAlignment="Left" Height="15.8" Margin="36.733,49.4,0,0" TextWrapping="Wrap" Text="Ensures You Won't Be Detected" VerticalAlignment="Top" Width="291" FontFamily="Rubik " FontSize="11.5" Foreground="#FF383B46"/>
                            <Border BorderBrush="#FF212329" BorderThickness="1" Height="1" Margin="10,87.2,33.533,0" VerticalAlignment="Top"/>
                            <CheckBox x:Name="SafetyNet" Checked="SafetyNetHandler" Unchecked="SafetyNetHandler" HorizontalAlignment="Right" Height="35.8" Margin="0,29.4,25.733,0" VerticalAlignment="Top" Width="60.8" Style="{DynamicResource FluentToggle}"/>

                            <!-- Auto Attach -->
                            <TextBlock HorizontalAlignment="Left" Height="19" Margin="36.733,110.6,0,0" TextWrapping="Wrap" Text="Auto-Attach" VerticalAlignment="Top" Width="98" FontFamily="/Nihon;component/Font's/#Rubik Medium" FontSize="13" Foreground="#FF707386"/>
                            <TextBlock HorizontalAlignment="Left" Height="15.8" Margin="36.733,138.6,0,0" TextWrapping="Wrap" Text="Automatically Attach To Roblox Instances" VerticalAlignment="Top" Width="291" FontFamily="Rubik " FontSize="11.5" Foreground="#FF383B46"/>
                            <Border BorderBrush="#FF212329" BorderThickness="1" Height="1" Margin="10,176.4,33.533,0" VerticalAlignment="Top"/>
                            <CheckBox x:Name="AutoAttach" Checked="AutoAttachHandler" Unchecked="AutoAttachHandler" HorizontalAlignment="Right" Height="35.8" Margin="0,118.6,25.733,0" VerticalAlignment="Top" Width="60.8" Style="{DynamicResource FluentToggle}"/>

                            <!-- Auto Execute -->
                            <TextBlock HorizontalAlignment="Left" Height="19" Margin="36.733,200.6,0,0" TextWrapping="Wrap" Text="Auto-Execute" VerticalAlignment="Top" Width="106.8" FontFamily="/Nihon;component/Font's/#Rubik Medium" FontSize="13" Foreground="#FF707386"/>
                            <TextBlock HorizontalAlignment="Left" Height="15.8" Margin="36.733,228.6,0,0" TextWrapping="Wrap" Text="Executes Scripts Upon Attachment (Auto Execute)" VerticalAlignment="Top" Width="291" FontFamily="Rubik " FontSize="11.5" Foreground="#FF383B46"/>
                            <Border BorderBrush="#FF212329" BorderThickness="1" Height="1" Margin="10,266.4,33.533,0" VerticalAlignment="Top"/>
                            <CheckBox x:Name="AutoExecute" HorizontalAlignment="Right" Height="35.8" Margin="0,208.6,25.733,0" VerticalAlignment="Top" Width="60.8" Style="{DynamicResource FluentToggle}"/>

                            <!-- Stealth Mode -->
                            <TextBlock HorizontalAlignment="Left" Height="19" Margin="36.733,286.2,0,-25.997" TextWrapping="Wrap" Text="Stealth-Mode" VerticalAlignment="Top" Width="106.8" FontFamily="/Nihon;component/Font's/#Rubik Medium" FontSize="13" Foreground="#FF707386"/>
                            <TextBlock HorizontalAlignment="Left" Height="15.8" Margin="36.733,314.2,0,-50.797" TextWrapping="Wrap" Text="Hides Nihon From Recording Software Or Screenshare" VerticalAlignment="Top" Width="291" FontFamily="Rubik " FontSize="11.5" Foreground="#FF383B46"/>
                            <Border BorderBrush="#FF212329" BorderThickness="1" Height="1" Margin="10,352,33.533,-73.797" VerticalAlignment="Top"/>
                            <CheckBox x:Name="StealthMode" Checked="StealthModeHandler" Unchecked="StealthModeHandler" HorizontalAlignment="Right" Height="35.8" Margin="0,294.2,25.733,0" VerticalAlignment="Top" Width="60.8" Style="{DynamicResource FluentToggle}"/>

                            <!-- TopMost -->
                            <TextBlock HorizontalAlignment="Left" Height="19" Margin="36.733,374.2,0,-12.397" TextWrapping="Wrap" Text="Top Most" VerticalAlignment="Top" Width="106.8" FontFamily="/Nihon;component/Font's/#Rubik Medium" FontSize="13" Foreground="#FF707386"/>
                            <TextBlock HorizontalAlignment="Left" Height="15.8" Margin="36.733,402.2,0,-37.197" TextWrapping="Wrap" Text="Keep Nihon V2 On Top Of Other Windows" VerticalAlignment="Top" Width="291" FontFamily="Rubik " FontSize="11.5" Foreground="#FF383B46"/>
                            <Border BorderBrush="#FF212329" BorderThickness="1" Height="1" Margin="10,440,33.533,-60.197" VerticalAlignment="Top"/>
                            <CheckBox x:Name="StayOnTop" Checked="StayOnTopHandler" Unchecked="StayOnTopHandler" HorizontalAlignment="Right" Height="35.8" Margin="0,382.2,25.733,-37.197" VerticalAlignment="Top" Width="60.8" Style="{DynamicResource FluentToggle}"/>

                            <!-- Kill Roblox -->
                            <TextBlock HorizontalAlignment="Left" Height="19" Margin="36.733,460.403,0,0" TextWrapping="Wrap" Text="Kill-Roblox" VerticalAlignment="Top" Width="106.8" FontFamily="/Nihon;component/Font's/#Rubik Medium" FontSize="13" Foreground="#FF707386"/>
                            <TextBlock HorizontalAlignment="Left" Height="15.8" Margin="36.733,488.403,0,0" TextWrapping="Wrap" Text="Kill All Roblox Instances On Click" VerticalAlignment="Top" Width="291" FontFamily="Rubik " FontSize="11.5" Foreground="#FF383B46"/>
                            <Button x:Name="KillRoblox" Content="Enable" Click="KillRoblox_Click" HorizontalAlignment="Right" Height="26.934" Margin="0,470.466,25.733,0" VerticalAlignment="Top" Width="60.8" Style="{DynamicResource Button}" Background="#FF1A1B20" BorderBrush="#FF2B303D" BorderThickness="1.5" FontFamily="Segoe UI Semibold" Padding="1,0,1,1" Foreground="#FF707386"/>
                            <Border BorderBrush="#FF212329" BorderThickness="1" Height="1" Margin="10,521,34,0" VerticalAlignment="Top"/>

                            <!-- Multi Roblox -->
                            <TextBlock HorizontalAlignment="Left" Height="19" Margin="37,539,0,0" TextWrapping="Wrap" Text="Multi-Roblox" VerticalAlignment="Top" Width="106.8" FontFamily="/Nihon;component/Font's/#Rubik Medium" FontSize="13" Foreground="#FF707386"/>
                            <TextBlock HorizontalAlignment="Left" Height="15.8" Margin="37,573,0,0" TextWrapping="Wrap" Text="Open Nihon Multi Roblox To Run Multiple Clients" VerticalAlignment="Top" Width="291" FontFamily="Rubik " FontSize="11.5" Foreground="#FF383B46"/>
                            <Button x:Name="MultiRoblox" Content="Enable" Click="MultiRoblox_Click"  HorizontalAlignment="Right" Height="26.934" Margin="0,548,26,0" VerticalAlignment="Top" Width="60.8" Style="{DynamicResource Button}" Background="#FF1A1B20" BorderBrush="#FF2B303D" BorderThickness="1.5" FontFamily="Segoe UI Semibold" Padding="1,0,1,1" Foreground="#FF707386"/>
                            <Border BorderBrush="#FF212329" BorderThickness="1" Height="1" Margin="10,611,34,0" VerticalAlignment="Top"/>

                            <!-- Save Settings Btn -->
                            <Button x:Name="SaveSettings" Content="Save Settings" Click="SaveSettings_Click" HorizontalAlignment="Center" Height="26.934" Margin="0,634,0,0" VerticalAlignment="Top" Width="100" Style="{DynamicResource Button}" Background="#FF1A1B20" BorderBrush="#FF2B303D" BorderThickness="1.5" FontFamily="Segoe UI Semibold" Padding="1,0,1,1" Foreground="#FF707386"/>
                        </Grid>

                    </ScrollViewer>
                </Grid>

            </TabItem>

            <!-- Script Hub Tab -->
            <TabItem x:Name="ScriptHubTab" Header="TabItem" Width="0" Height="0">

                <!-- Internal Box -->
                <Grid x:Name="ScriptHub" Margin="5,0,0,0">

                    <!-- Scroll Viewer -->
                    <ScrollViewer Width="Auto" Height="Auto" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Visible" Template="{DynamicResource ScrollViewerStyle}" Margin="0,39,0,0">
                        <!-- Wrap Panel -->
                        <WrapPanel Height="Auto" x:Name="ScriptHubPanel"/>

                    </ScrollViewer>

                    <!-- Search Box -->
                    <TextBox x:Name="SearchBox" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" HorizontalAlignment="Right" Height="24" Margin="0,10,10,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="146" Style="{DynamicResource CorneredSearchBox}" Background="#FF17191D" BorderBrush="#FF222429" BorderThickness="1" FontFamily="Poppins" FontSize="13" Padding="4,1,0,0" Foreground="#FF33363E"/>

                    <!-- Refresh Btn -->
                    <Button x:Name="RefreshButton" Content="&#xe72c;" Click="RefreshButton_Click" HorizontalAlignment="Right" Height="24" Margin="0,10,161,0" VerticalAlignment="Top" Width="30" Style="{DynamicResource Button}" Background="#FF17191D" BorderBrush="#FF222429" BorderThickness="1" FontFamily="Segoe Fluent Icons" Padding="1,0,1,1" Foreground="#FF707386"/>

                </Grid>

            </TabItem>

            <TabItem x:Name="IntegrationTab" Header="TabItem" Width="0" Height="0">

                <Grid x:Name="Integrations" Margin="5,0,0,0">

                    <!-- Input Box -->
                    <Grid x:Name="InputBox" Opacity="1" Visibility="Visible">

                        <!-- Email Box -->
                        <Label x:Name="EmailText"  HorizontalContentAlignment="Left" FontSize="14" VerticalContentAlignment="Bottom" FontFamily="Segoe UI Semibold" Content="Email" Foreground="#FF707386" Margin="10,0,10,235" Height="30" VerticalAlignment="Bottom" />
                        <TextBox FontFamily="Poppins" Foreground="#FF707386" x:Name="EmailBox" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" Background="#FF1A1B20" BorderBrush="#FF2B303D" BorderThickness="1" Style="{StaticResource TransparentTextBox}" Margin="10,0,10,205" Height="30" VerticalAlignment="Bottom" >
                            <TextBox.Resources>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius" Value="4" />
                                </Style>
                            </TextBox.Resources>
                        </TextBox>

                        <!-- Password Box -->
                        <Label x:Name="PasswordText" HorizontalContentAlignment="Left" FontSize="14" VerticalContentAlignment="Bottom" FontFamily="Segoe UI Semibold" Content="Password" Foreground="#FF707386" Margin="10,0,10,170" Height="30" VerticalAlignment="Bottom" />
                        <PasswordBox Foreground="#FF707386" x:Name="PasswordBox" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" Background="#FF1A1B20" BorderBrush="#FF2B303D" BorderThickness="1" Margin="10,0,10,135" Height="30" VerticalAlignment="Bottom" >
                            <PasswordBox.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="CornerRadius" Value="4" />
                                </Style>
                            </PasswordBox.Resources>
                            <PasswordBox.Style>
                                <StaticResource ResourceKey="PasswordBoxStyle"/>
                            </PasswordBox.Style>
                        </PasswordBox>

                        <!-- Authentication -->
                        <Button x:Name="LoginButton" Click="LoginButton_Click" HorizontalAlignment="Left" Content="Sign In" Height="27" Margin="517,238,0,0" VerticalAlignment="Top" Width="61" Style="{DynamicResource Button}" Background="#FF1A1B20" BorderBrush="#FF2B303D" BorderThickness="1.5" FontFamily="Segoe UI Semibold" Padding="1,0,1,1" Foreground="#FF707386"/>

                    </Grid>

                    <Border x:Name="ScriptingBox" Opacity="0" Visibility="Hidden" CornerRadius="4" BorderBrush="#FF2B303D" BorderThickness="1" Margin="10,10,10,10">

                        <Grid>

                            <!-- Separator -->
                            <Separator Margin="175,99,185,95" RenderTransformOrigin="0.5,0.5" Background="#FF2B303D" >
                                <Separator.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="90"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Separator.RenderTransform>
                            </Separator>

                            <!-- Info -->
                            <Label HorizontalContentAlignment="Left" FontSize="14" VerticalContentAlignment="Bottom" FontFamily="Segoe UI Semibold" Content="Title" Foreground="#FF707386" Margin="10,10,310,215" />

                            <TextBox FontSize="14" FontFamily="Poppins" TextWrapping="Wrap" Foreground="#FF707386" x:Name="TitleBox" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" Background="#FF1A1B20" BorderBrush="#FF2B303D" BorderThickness="1" Style="{StaticResource TransparentTextBox}" Margin="10,39,310,184" >
                                <TextBox.Resources>
                                    <Style TargetType="Border">
                                        <Setter Property="CornerRadius" Value="4" />
                                    </Style>
                                </TextBox.Resources>
                            </TextBox>

                            <Label HorizontalContentAlignment="Left" FontSize="14" VerticalContentAlignment="Bottom" FontFamily="Segoe UI Semibold" Content="Description" Foreground="#FF707386" Margin="10,74,310,150" />

                            <TextBox FontSize="14" FontFamily="Poppins" TextWrapping="Wrap" Foreground="#FF707386" x:Name="DescriptionBox" HorizontalContentAlignment="Left" VerticalContentAlignment="Top" Background="#FF1A1B20" BorderBrush="#FF2B303D" BorderThickness="1" Style="{StaticResource TransparentTextBox}" Margin="10,108,310,10" >
                                <TextBox.Resources>
                                    <Style TargetType="Border">
                                        <Setter Property="CornerRadius" Value="4" />
                                    </Style>
                                </TextBox.Resources>
                            </TextBox>

                            <!-- Post Script -->
                            <Button x:Name="PostButton" HorizontalAlignment="Left" Content="Upload" Height="27" Margin="495,216,0,0" VerticalAlignment="Top" Width="61" Style="{DynamicResource Button}" Background="#FF1A1B20" BorderBrush="#FF2B303D" BorderThickness="1.5" FontFamily="Segoe UI Semibold" Padding="1,0,1,1" Foreground="#FF707386"/>

                        </Grid>

                    </Border>

                </Grid>

            </TabItem>

        </TabControl>

        <!-- Black Cloak/Shadow -->
        <Border x:Name="Blackcloak" BorderThickness="1" Margin="0,55.397,0,0" Opacity="0" Visibility="Hidden">
            <Border.BorderBrush>
                <SolidColorBrush Color="Black" Opacity="0.3"/>
            </Border.BorderBrush>
            <Border.Background>
                <SolidColorBrush Color="Black" Opacity="0.3"/>
            </Border.Background>
        </Border>

        <!-- DropDown Menu -->
        <Border x:Name="DropDownMenu" BorderBrush="#FF17191D" BorderThickness="1" Height="0" Margin="0,55.397,0,0" VerticalAlignment="Top" Background="#FF17191D" Visibility="Hidden">

            <!-- DropDown Box -->
            <Grid>

                <!-- Close/Mini Btns -->
                <Button x:Name="MinimizeButton" Click="MinimizeButton_Click" Content="Minimize" Height="35.203" Style="{DynamicResource Dropdownbuttons}" VerticalAlignment="Top" FontFamily="Telegraf" Foreground="#FF505766"/>
                <Button x:Name="CloseButton" Click="CloseButton_Click" Content="Close" Height="35.203" Style="{DynamicResource Dropdownbuttons}" VerticalAlignment="Top" Margin="0,35.203,0,0" FontFamily="Telegraf" BorderBrush="{x:Null}" Foreground="#FF505766"/>

            </Grid>
        </Border>

    </Grid>
</Window>